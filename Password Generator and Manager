#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define FILENAME "passwords.dat"
#define MAX_PASSWORD_LENGTH 100


void generatePassword(int length, char *password) {
    char charset[] = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()";
    for (int i = 0; i < length; i++) {
        password[i] = charset[rand() % (sizeof(charset) - 1)];
    }
    password[length] = '\0'; 
}


void storePassword(const char *password) {
    FILE *file = fopen(FILENAME, "a"); 
    if (file == NULL) {
        printf("Error opening file to store password.\n");
        return;
    }
    fprintf(file, "%s\n", password); 
    fclose(file);
    printf("Password stored successfully.\n");
}


void viewPasswords() {
    FILE *file = fopen(FILENAME, "r");
    if (file == NULL) {
        printf("No passwords stored yet.\n");
        return;
    }

    char password[MAX_PASSWORD_LENGTH];
    printf("Stored passwords:\n");
    while (fgets(password, sizeof(password), file)) {
        printf("- %s", password); 
    }
    fclose(file);
}


void deletePasswords() {
    if (remove(FILENAME) == 0) {
        printf("All passwords deleted.\n");
    } else {
        printf("Error deleting passwords.\n");
    }
}

int main() {
    srand(time(NULL)); 

    int choice;
    char password[MAX_PASSWORD_LENGTH];

    while (1) {
        printf("\nPassword Manager\n");
        printf("1. Generate and store a password\n");
        printf("2. View stored passwords\n");
        printf("3. Delete all stored passwords\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter the password length (6-100): ");
                int length;
                scanf("%d", &length);
                if (length < 6 || length > MAX_PASSWORD_LENGTH) {
                    printf("Invalid length. Must be between 6 and %d.\n", MAX_PASSWORD_LENGTH);
                } else {
                    generatePassword(length, password);
                    printf("Generated Password: %s\n", password);
                    storePassword(password); 
                }
                break;
            case 2:
                viewPasswords(); 
                break;
            case 3:
                deletePasswords(); 
                break;
            case 4:
                printf("Goodbye!\n");
                return 0;
            default:
                printf("Invalid option, try again.\n");
        }
    }
}
